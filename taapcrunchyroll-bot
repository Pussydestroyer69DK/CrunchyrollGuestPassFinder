#!/bin/bash

pkgname='taapcrunchyroll-bot'

configDir="$HOME/.config/$pkgname"
configFile="$configDir/$pkgname.conf"
pythonScriptFolder="/usr/lib/$pkgname"
if [ ! -e "$configDir" ]; then
        mkdir -p "$configDir"
fi
if [ ! -e "$configFile" ]; then
        touch "$configFile"
fi

cd "$configDir" || exit 2

if [[ "$1" == "-e" ]];then
    ${EDITOR:-nano} "$configFile"
    exit 0;
fi

function sendMessage(){
[ ! -z "$updateUserInfoScript" ] &&   $updateUserInfoScript "$1" "$i" "$groupPosition" "$2"
}

function activateAccount(){
    uname=$1
    password=$2
    echo "Obtaining guest pass for $uname of Group $i";
    python3 "$pythonScriptFolder/crunchyrollGuestPassFinder.py" "$uname" "$password" "$killTime"
    errorCode="$?"

    if [[ $errorCode -eq 0 ]]; then
        msg="Guest pass obtained; Updating user info"
    else
        msg="exited with error code $errorCode"
    fi
    sendMessage "$errorCode" "$msg"
    return $errorCode
}

exec > >(tee -i "$configDir/bot.log")
exec 2>&1
numberOfGroups=1

getCredentialsScript=
updateUserInfoScript=
killTime=36000 #10 hours

loop=2
source "$configFile"
if [[ -z $getCredentialsScript || -z $updateUserInfoScript ]]; then
    echo -n "Username:"; read username
    echo -n "Password:"; read -s password
    activateAccount "$username" "$password"
    exit
fi

echo "numberOfGroups '$numberOfGroups'"
echo "getCredentialsScript '$getCredentialsScript'"
echo "updateUserInfoScript '$updateUserInfoScript'"

echo "errorScript '$updateUserInfoScript'"
echo "killTime '$killTime'"

for i in $(seq 1 $numberOfGroups);
    do  
        n=$loop
        offset=0
        while [[ $loop -le 0 || $n -ne 0 ]]; do
            n=$n-1
            credentials=$($getCredentialsScript "$i" "$offset")
            errCode=$?
            
            if [ "$credentials" != "0" && $errCode -eq 0 ]; then
                uname=$(echo "$credentials" |cut -d " " -f1)

	            password=$(echo "$credentials" |cut -d " " -f2)
	            groupPosition=$(echo "$credentials" |cut -d " " -f3)
                activateAccount "$uname" "$password" && break
                offset=$offset+1
            elif [ $errCode -ne 0 ]; then 
                sendMessage $errCode "Could not load credentials"
                break
            else
                sendMessage "-1" "Account was already activated"
                break
            fi
       done
  done
